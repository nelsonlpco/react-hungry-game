{"version":3,"sources":["store/domain/model/option-model.ts","theme/index.ts","store/domain/decision-tree.ts","store/game/actions.ts","store/i18n/pt.ts","store/game/selectors.ts","store/question/selectors.ts","store/question/actions.ts","store/game/sagas.ts","store/question/saga.ts","store/sagas.ts","store/game/reducer.ts","store/question/reducer.ts","store/reducers.ts","store/index.ts","components/container.tsx","components/card.tsx","components/button.tsx","theme/theme-context.tsx","hooks/use-theme.ts","pages/game-page/try-again-button.tsx","pages/game-page/winner-card.tsx","components/text-input.tsx","pages/game-page/question-card/question-form.tsx","pages/game-page/question-card/food-question.tsx","pages/game-page/question-card/quality-question.tsx","pages/game-page/question-card/index.tsx","pages/game-page/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserResponse","CssAnimations","OptionNodeModel","question","right","left","this","option","food","quality","DecisionTree","qualityQuestion","qualityFoodQuestion","foodQuestion","root","emptyOptions","LeftOption","RightOption","currentQuestionNode","addQuestion","userResponse","currentQuestion","hasChildren","yes","runCases","GameActionType","theme","colors","primaryBg","secondaryBg","ok","cancel","off","start","type","START","payload","undefined","setResponse","response","SET_RESPONSE","showQuestionModal","status","SHOW_QUESTION_MODAL","showWinnerModal","SHOW_WINNER_MODAL","setAnimation","animation","SET_ANIMATION","answerAsync","ANSWER_ASYNC","setUserFavoriteFoodAsync","SET_USER_FAVORITE_FOOD_ASYNC","userFood","npcFood","value","getState","state","game","pt","Question","QuestionActionTypes","showFoodModal","setFoodAsync","SET_FOOD_ASYNC","setQualityAsync","SET_QUALITY_ASYNC","setFood","SET_FOOD","setQuality","SET_QUALITY","setCurrentQuestion","SET_CURRENT_QUESTION","setShowFoodModal","SET_SHOW_FOOD_MODAL","clear","CLEAR","runCase","setUserFavoriteFood","decisionTree","sayYes","put","gameActions","slidRight","slidLeft","select","gameSelectors","delay","isEnptyOptions","slidIn","questionSelectors","favoriteFood","foodQuality","addFavoriteFood","Root","questionActions","takeLatest","gameSeletors","npcQuestionNode","rootSagas","all","gameSagas","questionSagas","InitialState","DefaultState","combineReducers","action","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","process","trim","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","reducers","applyMiddleware","run","style","display","flexDirection","padding","justifyContent","alignItems","Container","children","height","width","bgColor","background","defaultProps","Card","body","footer","className","Button","color","onClickHandler","role","tabIndex","onClick","backgroundColor","themeContext","createContext","ThemeProvider","Provider","useTheme","useContext","TryAgainButton","dispatch","useDispatch","confirmHandler","useCallback","WinnerCard","useSelector","TextInput","placeholder","onChange","onEnterPressed","onChangeHandler","event","target","onchange","onKeyPressHandler","key","preventDefault","autoFocus","onKeyPress","QuestionForm","onEnter","onEnterPressedHandler","htmlFor","FoodQuestion","useState","setFoodHandler","nextHandler","length","nextButton","useMemo","setQualityHandler","QuestionCard","GamePage","useEffect","yesButtonHandler","noButtonHandler","no","i18n","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.fc437a29.chunk.js","sourcesContent":["export enum UserResponse {\n  yes = 'yes',\n  no = 'no',\n}\n\nclass OptionNodeModel {\n  private question: string;\n\n  private right?: OptionNodeModel;\n\n  private left?: OptionNodeModel;\n\n  constructor(question: string) {\n    this.question = question;\n  }\n\n  get Question(): string {\n    return this.question;\n  }\n\n  set Question(question: string) {\n    this.question = question;\n  }\n\n  get RightOption(): OptionNodeModel | undefined {\n    return this.right;\n  }\n\n  set RightOption(option: OptionNodeModel | undefined) {\n    this.right = option;\n  }\n\n  get LeftOption(): OptionNodeModel | undefined {\n    return this.left;\n  }\n\n  set LeftOption(option: OptionNodeModel | undefined) {\n    this.left = option;\n  }\n\n  hasChildren(): boolean {\n    return !!this.right && !!this.left;\n  }\n\n  addQuestion(food: string, quality: string): void {\n    this.right = new OptionNodeModel(this.question);\n    this.question = quality;\n    this.left = new OptionNodeModel(food);\n  }\n}\n\nexport default OptionNodeModel;\n","export enum CssAnimations {\n  slidIn = 'slid_down',\n  slidLeft = 'slid_left',\n  slidRight = 'slid_right',\n}\n\nexport type Theme = {\n  colors: {\n    primaryBg: string;\n    secondaryBg: string;\n    ok: string;\n    cancel: string;\n    off: string;\n  };\n};\n\nconst theme: Theme = {\n  colors: {\n    primaryBg: '#2E2E2E',\n    secondaryBg: '#E9E9E1',\n    ok: '#66E093',\n    cancel: '#F55F57',\n    off: '#737082',\n  },\n};\n\nexport default theme;\n","import OptionNodeModel, { UserResponse } from './model/option-model';\n\nclass DecisionTree {\n  private root: OptionNodeModel;\n\n  private emptyOptions = false;\n\n  constructor(\n    qualityQuestion: string,\n    qualityFoodQuestion: string,\n    foodQuestion: string,\n  ) {\n    this.root = new OptionNodeModel(qualityQuestion);\n    this.root.LeftOption = new OptionNodeModel(qualityFoodQuestion);\n    this.root.RightOption = new OptionNodeModel(foodQuestion);\n  }\n\n  get isEnptyOptions(): boolean {\n    return this.emptyOptions;\n  }\n\n  get Root(): OptionNodeModel {\n    this.emptyOptions = false;\n    return this.root;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addFavoriteFood(\n    currentQuestionNode: OptionNodeModel,\n    food: string,\n    quality: string,\n  ): void {\n    currentQuestionNode.addQuestion(food, quality);\n  }\n\n  runCases(\n    userResponse: UserResponse,\n    question?: OptionNodeModel,\n  ): OptionNodeModel | undefined {\n    const currentQuestion = question;\n\n    if (currentQuestion?.hasChildren()) {\n      if (userResponse === UserResponse.yes) {\n        return this.runCases(userResponse, currentQuestion.LeftOption);\n      }\n\n      return this.runCases(userResponse, currentQuestion.RightOption);\n    }\n\n    this.emptyOptions = !currentQuestion?.hasChildren();\n\n    return currentQuestion;\n  }\n\n  runCase(\n    userResponse: UserResponse,\n    question?: OptionNodeModel,\n  ): OptionNodeModel | undefined {\n    const currentQuestion = question;\n\n    if (currentQuestion?.hasChildren()) {\n      if (userResponse === UserResponse.yes) {\n        return currentQuestion.LeftOption;\n      }\n\n      return currentQuestion.RightOption;\n    }\n\n    this.emptyOptions = !currentQuestion?.hasChildren();\n    return currentQuestion;\n  }\n}\n\nexport default DecisionTree;\n","import OptionNodeModel, { UserResponse } from 'store/domain/model/option-model';\nimport { ActionType } from 'store/types';\nimport { CssAnimations } from 'theme/index';\n\nexport enum GameActionType {\n  START = '@GAME/START',\n  ANSWER_ASYNC = '@GAME/ANSWER_ASYNC',\n  SET_USER_FAVORITE_FOOD_ASYNC = '@GAME/SET_USER_FAVORITE_FOOD_ASYNC',\n  SET_RESPONSE = '@GAME/SET_RESPONSE',\n  SHOW_WINNER_MODAL = '@GAME/SHOW_WINNER_MODAL',\n  SHOW_QUESTION_MODAL = '@GAME/SHOW_QUESTION_MODAL',\n  SET_ANIMATION = '@GAME/SET_ANIMATION',\n}\n\nexport type GameAction<T> = ActionType<GameActionType, T>;\n\nfunction start(): GameAction<void> {\n  return {\n    type: GameActionType.START,\n    payload: undefined,\n  };\n}\n\nfunction answerAsync(response: UserResponse): GameAction<UserResponse> {\n  return {\n    type: GameActionType.ANSWER_ASYNC,\n    payload: response,\n  };\n}\n\nfunction setUserFavoriteFoodAsync(): GameAction<undefined> {\n  return {\n    type: GameActionType.SET_USER_FAVORITE_FOOD_ASYNC,\n    payload: undefined,\n  };\n}\n\nfunction setResponse(response: OptionNodeModel): GameAction<OptionNodeModel> {\n  return {\n    type: GameActionType.SET_RESPONSE,\n    payload: response,\n  };\n}\n\nfunction showQuestionModal(status: boolean): GameAction<boolean> {\n  return {\n    type: GameActionType.SHOW_QUESTION_MODAL,\n    payload: status,\n  };\n}\n\nfunction showWinnerModal(status: boolean): GameAction<boolean> {\n  return {\n    type: GameActionType.SHOW_WINNER_MODAL,\n    payload: status,\n  };\n}\n\nfunction setAnimation(animation: CssAnimations): GameAction<CssAnimations> {\n  return {\n    type: GameActionType.SET_ANIMATION,\n    payload: animation,\n  };\n}\n\nexport default {\n  start,\n  setResponse,\n  showQuestionModal,\n  showWinnerModal,\n  setAnimation,\n  answerAsync,\n  setUserFavoriteFoodAsync,\n};\n","export default {\n  next: 'Próximo',\n  yes: 'Sim',\n  no: 'Não',\n  iGuestYourFavoriteFood: 'Vou adivinhar sua comida favorita!',\n  winnerMessage: 'Acertei novamente',\n  whatsYourFavoriteFood: 'Qual a sua comida favorita?',\n  whatsYourFoodIsThatFoodIsNot: (userFood: string, npcFood: string): string =>\n    `O que ${userFood} é que ${npcFood} não é?`,\n  theFoodIs: (value: string): string => `A comida é ${value}?`,\n};\n","import OptionNodeModel from 'store/domain/model/option-model';\nimport { ApplicationState } from 'store/types';\nimport { GameState } from './reducer';\nimport pt from '../i18n/pt';\n\nfunction getState(state: ApplicationState): GameState {\n  return state.game;\n}\n\nfunction getQuestion(state: ApplicationState): string {\n  return pt.theFoodIs(getState(state).question?.Question ?? '');\n}\n\nfunction getQuestionNode(state: ApplicationState): OptionNodeModel | undefined {\n  return getState(state).question;\n}\n\nfunction showWinnerModal(state: ApplicationState): boolean {\n  return getState(state).showWinnerModal;\n}\n\nfunction showQuestionModal(state: ApplicationState): boolean {\n  return getState(state).showQuestionModal;\n}\n\nfunction getAnimation(state: ApplicationState): string {\n  return getState(state).animation;\n}\n\nexport default {\n  getState,\n  getQuestion,\n  getQuestionNode,\n  showWinnerModal,\n  showQuestionModal,\n  getAnimation,\n};\n","import { ApplicationState } from 'store/types';\nimport { QuestionState } from './reducer';\nimport pt from '../i18n/pt';\n\nfunction getState(state: ApplicationState): QuestionState {\n  return state.question;\n}\n\nfunction getQuestion(state: ApplicationState): string {\n  return getState(state).currentQuestion;\n}\n\nfunction getFavoriteFood(state: ApplicationState): string {\n  return getState(state).food;\n}\n\nfunction getFoodQuality(state: ApplicationState): string {\n  return getState(state).quality;\n}\n\nfunction showFoodModal(state: ApplicationState): boolean {\n  return getState(state).showFoodModal;\n}\nexport default {\n  getState,\n  getQuestion,\n  getFavoriteFood,\n  getFoodQuality,\n  showFoodModal,\n};\n","import { ActionType } from 'store/types';\n\nexport enum QuestionActionTypes {\n  SET_FOOD_ASYNC = '@QUESTION/SET_FOOD_ASYNC',\n  SET_QUALITY_ASYNC = '@QUESTION/SET_QUALITY_ASYNC',\n  SET_FOOD = '@QUESTION/SET_FOOD',\n  SET_QUALITY = '@QUESTION/SET_QUALITY',\n  SET_CURRENT_QUESTION = '@QUESTION/SET_CURRENT_QUESTION',\n  SET_SHOW_FOOD_MODAL = '@QUESTION/SET_SHOW_FOOD_MODAL',\n  CLEAR = '@QUESTION/CLEAR',\n}\n\nexport type QuestionAction<T> = ActionType<QuestionActionTypes, T>;\n\nfunction setFood(food: string): QuestionAction<string> {\n  return {\n    type: QuestionActionTypes.SET_FOOD,\n    payload: food,\n  };\n}\n\nfunction setQuality(quality: string): QuestionAction<string> {\n  return {\n    type: QuestionActionTypes.SET_QUALITY,\n    payload: quality,\n  };\n}\n\nfunction setFoodAsync(food: string): QuestionAction<string> {\n  return {\n    type: QuestionActionTypes.SET_FOOD_ASYNC,\n    payload: food,\n  };\n}\n\nfunction setQualityAsync(quality: string): QuestionAction<string> {\n  return {\n    type: QuestionActionTypes.SET_QUALITY_ASYNC,\n    payload: quality,\n  };\n}\n\nfunction setCurrentQuestion(question: string): QuestionAction<string> {\n  return {\n    type: QuestionActionTypes.SET_CURRENT_QUESTION,\n    payload: question,\n  };\n}\n\nfunction setShowFoodModal(status: boolean): QuestionAction<boolean> {\n  return {\n    type: QuestionActionTypes.SET_SHOW_FOOD_MODAL,\n    payload: status,\n  };\n}\n\nfunction clear(): QuestionAction<void> {\n  return {\n    type: QuestionActionTypes.CLEAR,\n    payload: undefined,\n  };\n}\n\nexport default {\n  setFoodAsync,\n  setQualityAsync,\n  setFood,\n  setQuality,\n  setCurrentQuestion,\n  setShowFoodModal,\n  clear,\n};\n","import { takeLatest, put, select, delay, call } from 'redux-saga/effects';\nimport DecisionTree from 'store/domain/decision-tree';\nimport { CssAnimations } from 'theme/index';\nimport { UserResponse } from '../domain/model/option-model';\nimport gameActions, { GameActionType, GameAction } from './actions';\nimport gameSelectors from './selectors';\nimport questionSelectors from '../question/selectors';\nimport questionActions from '../question/actions';\n\nconst decisionTree = new DecisionTree('Massa', 'Lasanha', 'Bolo de chocolate');\n\nfunction* runCase({ payload: userResponse }: GameAction<UserResponse>): any {\n  const sayYes = userResponse === UserResponse.yes;\n\n  if (sayYes) {\n    yield put(gameActions.setAnimation(CssAnimations.slidRight));\n  } else {\n    yield put(gameActions.setAnimation(CssAnimations.slidLeft));\n  }\n\n  const currentQuestion = yield select(gameSelectors.getQuestionNode);\n  const question = yield decisionTree.runCase(userResponse, currentQuestion);\n\n  yield put(gameActions.setResponse(question));\n  yield delay(300);\n\n  if (decisionTree.isEnptyOptions) {\n    if (sayYes) {\n      yield put(gameActions.showWinnerModal(true));\n    } else {\n      yield put(gameActions.showQuestionModal(true));\n    }\n  }\n\n  yield put(gameActions.setAnimation(CssAnimations.slidIn));\n}\n\nfunction* setUserFavoriteFood(): any {\n  const currentQuestion = yield select(gameSelectors.getQuestionNode);\n  const favoriteFood = yield select(questionSelectors.getFavoriteFood);\n  const foodQuality = yield select(questionSelectors.getFoodQuality);\n\n  yield decisionTree.addFavoriteFood(\n    currentQuestion,\n    favoriteFood,\n    foodQuality,\n  );\n\n  yield put(gameActions.start());\n}\n\nfunction* start() {\n  yield put(gameActions.showWinnerModal(false));\n  yield put(gameActions.showQuestionModal(false));\n  yield put(gameActions.setResponse(decisionTree.Root));\n  yield put(questionActions.clear());\n}\n\nexport default [\n  takeLatest(GameActionType.START, start),\n  takeLatest(GameActionType.ANSWER_ASYNC, runCase),\n  takeLatest(GameActionType.SET_USER_FAVORITE_FOOD_ASYNC, setUserFavoriteFood),\n];\n","import { delay, put, select, takeLatest } from 'redux-saga/effects';\nimport { CssAnimations } from 'theme/index';\nimport questionActions, {\n  QuestionAction,\n  QuestionActionTypes,\n} from './actions';\nimport gameActions from '../game/actions';\nimport gameSeletors from '../game/selectors';\nimport pt from '../i18n/pt';\n\nfunction* setFood({ payload: food }: QuestionAction<string>): any {\n  const npcQuestionNode = yield select(gameSeletors.getQuestionNode);\n  yield put(questionActions.setFood(food));\n  yield put(questionActions.setShowFoodModal(false));\n  yield put(gameActions.setAnimation(CssAnimations.slidRight));\n  yield put(\n    questionActions.setCurrentQuestion(\n      pt.whatsYourFoodIsThatFoodIsNot(food, npcQuestionNode.Question),\n    ),\n  );\n  yield delay(300);\n  yield put(gameActions.setAnimation(CssAnimations.slidIn));\n}\n\nfunction* setQuality({ payload: quality }: QuestionAction<string>) {\n  yield put(questionActions.setQuality(quality));\n  yield delay(300);\n  yield put(gameActions.setUserFavoriteFoodAsync());\n}\n\nexport default [\n  takeLatest(QuestionActionTypes.SET_FOOD_ASYNC, setFood),\n  takeLatest(QuestionActionTypes.SET_QUALITY_ASYNC, setQuality),\n];\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { all } from 'redux-saga/effects';\n\nimport gameSagas from './game/sagas';\nimport questionSagas from './question/saga';\n\nfunction* rootSagas() {\n  yield all([...gameSagas, ...questionSagas]);\n}\n\nexport default rootSagas;\n","import OptionNodeModel from 'store/domain/model/option-model';\nimport { ActionType } from 'store/types';\nimport { CssAnimations } from 'theme/index';\nimport { GameActionType } from './actions';\n\nexport type GameState = {\n  question?: OptionNodeModel;\n  showWinnerModal: boolean;\n  showQuestionModal: boolean;\n  animation: CssAnimations;\n};\n\nconst InitialState: GameState = {\n  showWinnerModal: false,\n  showQuestionModal: false,\n  animation: CssAnimations.slidIn,\n};\n\nfunction setResponse(\n  state: GameState,\n  { payload }: ActionType<GameActionType, OptionNodeModel>,\n): GameState {\n  return {\n    ...state,\n    question: payload,\n  };\n}\n\nfunction showWinnerModal(\n  state: GameState,\n  { payload }: ActionType<GameActionType, boolean>,\n): GameState {\n  return {\n    ...state,\n    showWinnerModal: payload,\n  };\n}\n\nfunction showQuestionModal(\n  state: GameState,\n  { payload }: ActionType<GameActionType, boolean>,\n): GameState {\n  return {\n    ...state,\n    showQuestionModal: payload,\n  };\n}\n\nfunction setAnimation(\n  state: GameState,\n  { payload }: ActionType<GameActionType, CssAnimations>,\n): GameState {\n  return {\n    ...state,\n    animation: payload,\n  };\n}\n\nexport default (\n  state: GameState = InitialState,\n  action: ActionType<GameActionType, any>,\n): GameState => {\n  switch (action.type) {\n    case GameActionType.SET_RESPONSE:\n      return setResponse(state, action);\n    case GameActionType.SHOW_QUESTION_MODAL:\n      return showQuestionModal(state, action);\n    case GameActionType.SHOW_WINNER_MODAL:\n      return showWinnerModal(state, action);\n    case GameActionType.SET_ANIMATION:\n      return setAnimation(state, action);\n    default:\n      return state;\n  }\n};\n","import { QuestionAction, QuestionActionTypes } from './actions';\nimport pt from '../i18n/pt';\n\nexport type QuestionState = {\n  food: string;\n  quality: string;\n  currentQuestion: string;\n  showFoodModal: boolean;\n};\n\nconst DefaultState: QuestionState = {\n  food: '',\n  quality: '',\n  currentQuestion: pt.whatsYourFavoriteFood,\n  showFoodModal: true,\n};\n\nfunction clear(): QuestionState {\n  return {\n    ...DefaultState,\n  };\n}\n\nfunction setFood(\n  state: QuestionState,\n  { payload: food }: QuestionAction<string>,\n): QuestionState {\n  return {\n    ...state,\n    food,\n  };\n}\n\nfunction setQuality(\n  state: QuestionState,\n  { payload: quality }: QuestionAction<string>,\n): QuestionState {\n  return {\n    ...state,\n    quality,\n  };\n}\n\nfunction setCurrentQuestion(\n  state: QuestionState,\n  { payload: currentQuestion }: QuestionAction<string>,\n): QuestionState {\n  return {\n    ...state,\n    currentQuestion,\n  };\n}\n\nfunction setShowFoodModal(\n  state: QuestionState,\n  { payload: status }: QuestionAction<boolean>,\n): QuestionState {\n  return {\n    ...state,\n    showFoodModal: status,\n  };\n}\n\nexport default (\n  state = DefaultState,\n  action: QuestionAction<any>,\n): QuestionState => {\n  switch (action.type) {\n    case QuestionActionTypes.CLEAR:\n      return clear();\n    case QuestionActionTypes.SET_FOOD:\n      return setFood(state, action);\n    case QuestionActionTypes.SET_QUALITY:\n      return setQuality(state, action);\n    case QuestionActionTypes.SET_CURRENT_QUESTION:\n      return setCurrentQuestion(state, action);\n    case QuestionActionTypes.SET_SHOW_FOOD_MODAL:\n      return setShowFoodModal(state, action);\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { ApplicationState } from './types';\nimport gameReducer from './game/reducer';\nimport questionReducer from './question/reducer';\n\nexport default combineReducers<ApplicationState>({\n  game: gameReducer,\n  question: questionReducer,\n});\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSagas from './sagas';\n\nimport reducers from './reducers';\n\nconst NodeEnvDevelopment = 'development';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware();\n\nlet composeEnhancers = compose;\n\nif (process.env.NODE_ENV.trim() === NodeEnvDevelopment) {\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n}\n\nexport default createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSagas);\n","import React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n  height?: string;\n  width?: string;\n  bgColor: string;\n};\n\nconst style: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'column',\n  padding: '10px',\n  justifyContent: 'center',\n  alignItems: 'center',\n};\n\nfunction Container({ children, height, width, bgColor }: Props): JSX.Element {\n  return (\n    <div style={{ ...style, height, width, background: bgColor }}>\n      {children}\n    </div>\n  );\n}\n\nContainer.defaultProps = {\n  height: '100vh',\n  width: '100vw',\n};\n\nexport default Container;\n","import React from 'react';\n\ntype Props = {\n  body: React.ReactNode;\n  footer?: React.ReactNode;\n  bgColor: string;\n  animation: string;\n};\n\ntype StyleType = {\n  container: React.CSSProperties;\n  body: React.CSSProperties;\n  footer: React.CSSProperties;\n};\n\nfunction Card({ body, footer, bgColor, animation }: Props): JSX.Element {\n  return (\n    <div className={`card ${animation}`} style={{ background: bgColor }}>\n      <div className=\"card__body\">{body}</div>\n      <div className=\"card__footer\">{footer}</div>\n    </div>\n  );\n}\n\nCard.defaultProps = {\n  footer: <></>,\n};\n\nexport default Card;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n  onClickHandler: () => void;\n  color: string;\n  width?: string;\n};\n\nfunction Button({\n  children,\n  color,\n  width,\n  onClickHandler,\n}: Props): JSX.Element {\n  return (\n    <div\n      className=\"pill-button\"\n      role=\"button\"\n      tabIndex={0}\n      onClick={onClickHandler}\n      style={{ backgroundColor: color, width }}\n    >\n      {children}\n    </div>\n  );\n}\n\nButton.defaultProps = {\n  width: '110px',\n};\n\nexport default Button;\n","import React, { createContext } from 'react';\nimport theme, { Theme } from '.';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const themeContext = createContext<Theme>(theme);\n\nfunction ThemeProvider({ children }: Props): JSX.Element {\n  return (\n    <themeContext.Provider\n      value={{\n        ...theme,\n      }}\n    >\n      {children}\n    </themeContext.Provider>\n  );\n}\n\nexport default ThemeProvider;\n","import { useContext } from 'react';\nimport { Theme } from 'theme/index';\nimport { themeContext } from 'theme/theme-context';\n\nfunction useTheme(): Theme {\n  const theme = useContext(themeContext);\n\n  return theme;\n}\n\nexport default useTheme;\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport gameActions from 'store/game/actions';\nimport Button from 'components/button';\nimport useTheme from 'hooks/use-theme';\n\nfunction TryAgainButton(): JSX.Element {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n\n  const confirmHandler = useCallback(() => {\n    dispatch(gameActions.start());\n  }, [dispatch]);\n\n  return (\n    <Button\n      width=\"100%\"\n      color={theme.colors.ok}\n      onClickHandler={confirmHandler}\n    >\n      Tentar novamente\n    </Button>\n  );\n}\n\nexport default TryAgainButton;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport gameSelectors from 'store/game/selectors';\nimport Card from 'components/card';\nimport useTheme from 'hooks/use-theme';\nimport TryAgainButton from './try-again-button';\n\nfunction WinnerCard(): JSX.Element {\n  const theme = useTheme();\n\n  const animation = useSelector(gameSelectors.getAnimation);\n  const showWinnerModal = useSelector(gameSelectors.showWinnerModal);\n\n  const winnerModal = showWinnerModal && (\n    <Card\n      animation={animation}\n      bgColor={theme.colors.secondaryBg}\n      body={<div>Acertei novamente!</div>}\n      footer={<TryAgainButton />}\n    />\n  );\n\n  return winnerModal || <></>;\n}\n\nexport default WinnerCard;\n","import React, { ChangeEvent, useCallback, KeyboardEvent } from 'react';\n\ntype Props = {\n  placeholder?: string;\n  value: string;\n  onChange: (value: string) => void;\n  onEnterPressed: () => void;\n};\n\nfunction TextInput({\n  placeholder,\n  value,\n  onChange,\n  onEnterPressed,\n}: Props): JSX.Element {\n  const onChangeHandler = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      onChange(event.target.value);\n    },\n    [onchange],\n  );\n\n  const onKeyPressHandler = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        onEnterPressed();\n        event.preventDefault();\n      }\n    },\n    [onEnterPressed],\n  );\n\n  return (\n    <input\n      // eslint-disable-next-line jsx-a11y/no-autofocus\n      autoFocus\n      type=\"text\"\n      placeholder={placeholder}\n      value={value}\n      onChange={onChangeHandler}\n      onKeyPress={onKeyPressHandler}\n    />\n  );\n}\n\nTextInput.defaultProps = {\n  placeholder: '',\n};\n\nexport default TextInput;\n","import React, { useCallback } from 'react';\n\nimport TextInput from 'components/text-input';\n\ntype Props = {\n  question: string;\n  placeholder: string;\n  onChange: (value: string) => void;\n  onEnter: () => void;\n  value: string;\n};\n\nfunction QuestionForm({\n  question,\n  placeholder,\n  onChange,\n  value,\n  onEnter,\n}: Props): JSX.Element {\n  const onEnterPressedHandler = useCallback(() => {\n    onEnter();\n  }, []);\n\n  return (\n    <form>\n      <label htmlFor={question}>\n        <b>{question}</b>\n      </label>\n      <TextInput\n        placeholder={placeholder}\n        onChange={onChange}\n        onEnterPressed={onEnterPressedHandler}\n        value={value}\n      />\n    </form>\n  );\n}\n\nexport default QuestionForm;\n","import React, { useState, useMemo, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Card from 'components/card';\nimport Button from 'components/button';\nimport useTheme from 'hooks/use-theme';\n\nimport gameSelectors from 'store/game/selectors';\nimport questionSelectors from 'store/question/selectors';\nimport questionActions from 'store/question/actions';\nimport QuestionForm from './question-form';\n\nfunction FoodQuestion(): JSX.Element {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const animation = useSelector(gameSelectors.getAnimation);\n  const question = useSelector(questionSelectors.getQuestion);\n\n  const [food, setFood] = useState('');\n\n  const setFoodHandler = useCallback((value: string) => {\n    setFood(value);\n  }, []);\n\n  const nextHandler = useCallback(() => {\n    if (food.length > 3) dispatch(questionActions.setFoodAsync(food));\n  }, [dispatch, food]);\n\n  const nextButton = useMemo(\n    () => (\n      <Button\n        width=\"100%\"\n        color={food.length > 3 ? theme.colors.ok : theme.colors.off}\n        onClickHandler={nextHandler}\n      >\n        Próximo\n      </Button>\n    ),\n    [nextHandler, food],\n  );\n\n  return (\n    <Card\n      animation={animation}\n      bgColor={theme.colors.secondaryBg}\n      body={\n        <QuestionForm\n          question={question}\n          placeholder=\"comida\"\n          onChange={setFoodHandler}\n          value={food}\n          onEnter={nextHandler}\n        />\n      }\n      footer={nextButton}\n    />\n  );\n}\n\nexport default FoodQuestion;\n","import React, { useState, useMemo, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Card from 'components/card';\nimport Button from 'components/button';\nimport useTheme from 'hooks/use-theme';\n\nimport gameSelectors from 'store/game/selectors';\nimport questionActions from 'store/question/actions';\nimport questionSelectors from 'store/question/selectors';\n\nimport QuestionForm from './question-form';\n\nfunction FoodQuestion(): JSX.Element {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const animation = useSelector(gameSelectors.getAnimation);\n  const question = useSelector(questionSelectors.getQuestion);\n\n  const [quality, setQuality] = useState('');\n\n  const setQualityHandler = useCallback((value: string) => {\n    setQuality(value);\n  }, []);\n\n  const nextHandler = useCallback(() => {\n    if (quality.length > 3) dispatch(questionActions.setQualityAsync(quality));\n  }, [dispatch, quality]);\n\n  const nextButton = useMemo(\n    () => (\n      <Button\n        width=\"100%\"\n        color={quality.length > 3 ? theme.colors.ok : theme.colors.off}\n        onClickHandler={nextHandler}\n      >\n        Próximo\n      </Button>\n    ),\n    [nextHandler, quality],\n  );\n\n  return (\n    <Card\n      animation={animation}\n      bgColor={theme.colors.secondaryBg}\n      body={\n        <QuestionForm\n          question={question}\n          placeholder=\"Caracteristica\"\n          onChange={setQualityHandler}\n          value={quality}\n          onEnter={nextHandler}\n        />\n      }\n      footer={nextButton}\n    />\n  );\n}\n\nexport default FoodQuestion;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport gameSelectors from 'store/game/selectors';\nimport questionSelectors from 'store/question/selectors';\nimport FoodQuestion from './food-question';\nimport QualityQuestion from './quality-question';\n\nfunction QuestionCard(): JSX.Element {\n  const showQuestionModal = useSelector(gameSelectors.showQuestionModal);\n  const showFoodModal = useSelector(questionSelectors.showFoodModal);\n\n  const looseCard = showQuestionModal && showFoodModal && <FoodQuestion />;\n  const qualityQuestion = showQuestionModal && !showFoodModal && (\n    <QualityQuestion />\n  );\n\n  return looseCard || qualityQuestion || <></>;\n}\n\nexport default QuestionCard;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport i18n from 'store/i18n/pt';\n\nimport gameSelectors from 'store/game/selectors';\nimport gameActions from 'store/game/actions';\nimport { UserResponse } from 'store/domain/model/option-model';\nimport Container from 'components/container';\nimport Card from 'components/card';\nimport Button from 'components/button';\nimport useTheme from 'hooks/use-theme';\nimport WinnerCard from './winner-card';\nimport QuestionCard from './question-card';\n\nfunction GamePage(): JSX.Element {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n\n  const question = useSelector(gameSelectors.getQuestion);\n  const animation = useSelector(gameSelectors.getAnimation);\n  const showWinnerModal = useSelector(gameSelectors.showWinnerModal);\n  const showQuestionModal = useSelector(gameSelectors.showQuestionModal);\n\n  useEffect(() => {\n    dispatch(gameActions.start());\n  }, [dispatch]);\n\n  const yesButtonHandler = useCallback(() => {\n    dispatch(gameActions.answerAsync(UserResponse.yes));\n  }, [dispatch]);\n\n  const noButtonHandler = useCallback(() => {\n    dispatch(gameActions.answerAsync(UserResponse.no));\n  }, [dispatch]);\n\n  const QuestionCuard = (): JSX.Element => (\n    <Card\n      animation={animation}\n      bgColor={theme.colors.secondaryBg}\n      body={\n        <div>\n          <b>{question}</b>\n        </div>\n      }\n      footer={[\n        <Button color={theme.colors.cancel} onClickHandler={noButtonHandler}>\n          {i18n.no}\n        </Button>,\n        <Button color={theme.colors.ok} onClickHandler={yesButtonHandler}>\n          {i18n.yes}\n        </Button>,\n      ]}\n    />\n  );\n\n  return (\n    <Container bgColor={theme.colors.primaryBg}>\n      {!showWinnerModal && !showQuestionModal && QuestionCuard()}\n      <WinnerCard />\n      <QuestionCard />\n    </Container>\n  );\n}\n\nexport default GamePage;\n","import React from 'react';\nimport GamePage from 'pages/game-page';\nimport ThemeProvider from './theme/theme-context';\n\nfunction App(): JSX.Element {\n  return (\n    <ThemeProvider>\n      <GamePage />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): ReportHandler | void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './theme/main.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}